#! /usr/bin/env python
# coding=utf-8
# ================================================================
#   Copyright (C) 2022 . All rights reserved.
#
#   File name   : train_config.yaml
#   Author      : ronen halevy 
#   Created date:  7/19/22
#   Description :
#
# ================================================================
---
#training_dataset_config:

dataset_config:
  # select format:   tfrecords, coco_format_files or default: debug single image dataset
  input_data_source: coco_format_files # tfrecords # coco_format_files # [tfrecords, coco_format_files, debug_data]
  tfrecords:
    train: datasets/coco2012/coco-2017/fiftyone_20/input/tfrecords/train # datasets/shapes/two_colors/input/tfrecords/train
    valid: datasets/coco2012/coco-2017/fiftyone_20/input/tfrecords/train # datasets/shapes/two_colors/input/tfrecords/train
  coco_format_files:
    train:
      images_dir: datasets/Oxford Pets.v1-by-breed.coco/short_train # /home/ronen/fiftyone/coco-2017/validation/data # datasets/coco2012/images
      annotations: datasets/Oxford Pets.v1-by-breed.coco/short_train/_annotations.coco.json #/home/ronen/fiftyone/coco-2017/validation/labels.json # datasets/coco2012/annotations.json
    valid:
      images_dir: datasets/Oxford Pets.v1-by-breed.coco/short_train # /home/ronen/fiftyone/coco-2017/validation/data # datasets/coco2012/images
      annotations: datasets/Oxford Pets.v1-by-breed.coco/short_train/_annotations.coco.json #/home/ronen/fiftyone/coco-2017/validation/labels.json # datasets/coco2012/annotations.json


classes_name_file: datasets/coco2012/coco.names # datasets/pets_breed.names # datasets/coco2012/coco-2017/coco.names # datasets/coco2012/coco-2017/class.names # datasets/coco2012/coco.names
anchors_file: datasets/coco2012/anchors.txt
max_dataset_examples: null # null or size limit value

dataset_repeats: 0
max_bboxes: 100


# model
model_config_file: config/models/yolov3/model.yaml
image_size: 416 # preprocess will resize to a square image of this size
grid_sizes_table:
  - 13
  - 26
  - 52

training_mode: eager_tf # 'model execution mode. choices=[eager_tf, fit]'

batch_size: 8
epochs: 1000
learning_rate: 0.001
early_stopping: False # enables early_stopping callback
early_stop_patience: 13 # an early_stopping callback parameter
weights_save_peroid: 4
output_checkpoints_path: 'checkpoints/yolov3_train.tf' # prefix of path checkpoints save


transfer_learning_config:
  transfer_list: # all, none, backbone, or neck (equivalent to listing backbone and neck)
#    - all
    - none
#    - all
#    - backbone
#    - neck
#    - head
  freeze_train_list: # Can select neck or backbone or both or none
     - none
#     - backbone
#     - neck
  batch_norm_freeze_list:  # Can select neck or backbone or head or any of them or  none
    - none
#    - backbone
#    - neck
#    - head

  input_weights_path: ./checkpoints/keras_coco_yolov3.tf # checkpoints/my_keras_coco_yolov3.tf

#training_etc_config:
debug_mode: False # Debug step-by-step trace graph mode functions
render_dataset_example: False



